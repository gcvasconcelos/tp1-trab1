[0m[[0m[0minfo[0m] [0m[0m[32mTestBinaryTree:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mA BinaryTree[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should have be empty before any insertion[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should set the root after first insertion[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should insert node to the left if parent value is lower[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should insert node to the right if parent value is higher or equal[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should have height = 3 if 3 numbers in ascending order are inserted[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should have height = 2 if numbers 2,1,3 are inserted[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should return true when a node is found *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  false was not true (TestBinaryTree.scala:60)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return false when the node is not found in the tree[0m[0m
