[0m[[0m[0minfo[0m] [0m[0m[32mTestBinaryTree:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mA BinaryTree[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should have be empty before any insertion[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should set the root after first insertion[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should insert node to the left if parent value is lower[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should insert node to the right if parent value is higher or equal[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should have height = 3 if 3 numbers in ascending order are inserted[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should have height = 2 if numbers 2,1,3 are inserted[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should return correct node when the method find is called *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  java.lang.NullPointerException:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at TestBinaryTree.$anonfun$new$8(TestBinaryTree.scala:61)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.FlatSpecLike$$anon$1.apply(FlatSpecLike.scala:1682)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.FlatSpec.withFixture(FlatSpec.scala:1685)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  ...[0m[0m
